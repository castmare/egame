%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.0.1

-ifndef(down_pb).
-define(down_pb, true).

-define(down_pb_gpb_version, "4.0.1").

-ifndef('NAME_CARD_ST_PB_H').
-define('NAME_CARD_ST_PB_H', true).
-record(name_card_st,
        {name                   :: iolist() | undefined, % = 1
         last_set_time          :: non_neg_integer() | undefined % = 2, 32 bits
        }).
-endif.

-ifndef('ROLE_ST_PB_H').
-define('ROLE_ST_PB_H', true).
-record(role_st,
        {role_id                :: non_neg_integer() | undefined, % = 1, 32 bits
         elf_id                 :: non_neg_integer() | undefined, % = 2, 32 bits
         name_card              :: #name_card_st{} | undefined, % = 3
         level                  :: non_neg_integer() | undefined, % = 4, 32 bits
         exp                    :: non_neg_integer() | undefined % = 5, 32 bits
        }).
-endif.

-ifndef('CANCEL_MATCH_REPLY_PB_H').
-define('CANCEL_MATCH_REPLY_PB_H', true).
-record(cancel_match_reply,
        {
        }).
-endif.

-ifndef('START_MATCH_REPLY_PB_H').
-define('START_MATCH_REPLY_PB_H', true).
-record(start_match_reply,
        {
        }).
-endif.

-ifndef('MATCH_REPLY_PB_H').
-define('MATCH_REPLY_PB_H', true).
-record(match_reply,
        {start                  :: #start_match_reply{} | undefined, % = 1
         cancel                 :: #cancel_match_reply{} | undefined % = 2
        }).
-endif.

-ifndef('TEAM_MEMBER_ST_PB_H').
-define('TEAM_MEMBER_ST_PB_H', true).
-record(team_member_st,
        {role_id                :: non_neg_integer() | undefined, % = 1, 32 bits
         state                  :: 'inviting' | 'unready' | 'ready' | integer() | undefined, % = 2, enum team_member_state
         elf_id                 :: non_neg_integer() | undefined, % = 3, 32 bits
         name                   :: iolist() | undefined, % = 4
         level                  :: integer() | undefined % = 5, 32 bits
        }).
-endif.

-ifndef('TEAM_INFO_ST_PB_H').
-define('TEAM_INFO_ST_PB_H', true).
-record(team_info_st,
        {members = []           :: [#team_member_st{}] | undefined, % = 1
         leader_id              :: non_neg_integer() | undefined % = 2, 32 bits
        }).
-endif.

-ifndef('TEAM_REPLY_PB_H').
-define('TEAM_REPLY_PB_H', true).
-record(team_reply,
        {invite                 :: #team_member_st{} | undefined, % = 1
         accept                 :: #team_info_st{} | undefined, % = 2
         refuse                 :: 'success' | 'fail' | integer() | undefined, % = 3, enum result
         state                  :: 'success' | 'fail' | integer() | undefined, % = 4, enum result
         leave                  :: 'success' | 'fail' | integer() | undefined % = 5, enum result
        }).
-endif.

-ifndef('SELECT_MAGIC_REPLY_PB_H').
-define('SELECT_MAGIC_REPLY_PB_H', true).
-record(select_magic_reply,
        {result                 :: 'success' | 'fail' | integer() | undefined % = 1, enum result
        }).
-endif.

-ifndef('LOOKUP_ROLE_REPLY_PB_H').
-define('LOOKUP_ROLE_REPLY_PB_H', true).
-record(lookup_role_reply,
        {roles = []             :: [#role_st{}] | undefined % = 1
        }).
-endif.

-ifndef('ROLE_SUMMARY_ST_PB_H').
-define('ROLE_SUMMARY_ST_PB_H', true).
-record(role_summary_st,
        {role_id                :: non_neg_integer() | undefined, % = 1, 32 bits
         elf_id                 :: non_neg_integer() | undefined, % = 2, 32 bits
         name                   :: iolist() | undefined, % = 3
         level                  :: non_neg_integer() | undefined % = 4, 32 bits
        }).
-endif.

-ifndef('LOGIN_REPLY_PB_H').
-define('LOGIN_REPLY_PB_H', true).
-record(login_reply,
        {result                 :: 'new_user' | 'default_role' | 'role_list' | integer(), % = 1, enum login_reply.result
         user_id                :: non_neg_integer(), % = 2, 32 bits
         role                   :: #role_st{} | undefined, % = 3
         roles = []             :: [#role_summary_st{}] | undefined % = 4
        }).
-endif.

-ifndef('MAGIC_REPLY_PB_H').
-define('MAGIC_REPLY_PB_H', true).
-record(magic_reply,
        {select                 :: #select_magic_reply{} | undefined % = 1
        }).
-endif.

-ifndef('SELECT_ROLE_REPLY_PB_H').
-define('SELECT_ROLE_REPLY_PB_H', true).
-record(select_role_reply,
        {role                   :: #role_st{}       % = 1
        }).
-endif.

-ifndef('CREATE_ROLE_REPLY_PB_H').
-define('CREATE_ROLE_REPLY_PB_H', true).
-record(create_role_reply,
        {result                 :: 'success' | 'nickname_repeat' | 'nickname_error' | 'nickname_dirty' | integer(), % = 1, enum create_role_reply.result
         role                   :: #role_st{} | undefined % = 2
        }).
-endif.

-ifndef('ROLE_REPLY_PB_H').
-define('ROLE_REPLY_PB_H', true).
-record(role_reply,
        {create                 :: #create_role_reply{} | undefined, % = 1
         select                 :: #select_role_reply{} | undefined, % = 2
         lookup                 :: #lookup_role_reply{} | undefined % = 3
        }).
-endif.

-ifndef('NOTIFY_MSG_PB_H').
-define('NOTIFY_MSG_PB_H', true).
-record(notify_msg,
        {
        }).
-endif.

-ifndef('ERROR_INFO_PB_H').
-define('ERROR_INFO_PB_H', true).
-record(error_info,
        {msg                    :: iolist() | undefined % = 1
        }).
-endif.

-ifndef('DOWN_MSG_PB_H').
-define('DOWN_MSG_PB_H', true).
-record(down_msg,
        {error                  :: #error_info{} | undefined, % = 1
         notify                 :: #notify_msg{} | undefined, % = 2
         login                  :: #login_reply{} | undefined, % = 3
         role                   :: #role_reply{} | undefined, % = 4
         magic                  :: #magic_reply{} | undefined, % = 5
         team                   :: #team_reply{} | undefined, % = 6
         match                  :: #match_reply{} | undefined % = 7
        }).
-endif.

-endif.
